<?xml version="1.0" encoding="utf-8"?>

<launch>
    <!-- Spawn a nodelet manager -->
  <node pkg="nodelet" type="nodelet" name="manager" args="manager" output="screen">
    <param name="num_worker_threads" value="16" />
  </node>

  <!-- Spawn an image_proc/rectify nodelet to rectify the RGB image -->
  <node pkg="nodelet" type="nodelet" name="rectify_rgbdepth"
        args="load image_proc/rectify manager --no-bond"
        respawn="true">
    <remap from="image_mono"  to="rgb_to_depth/image_raw" />
    <remap from="image_rect"  to="rgb_to_depth/image_rect" />
  </node>

  <!-- Spawn an image_proc/rectify nodelet to rectify the RGB image -->
  <node pkg="nodelet" type="nodelet" name="rectify_rgb"
        args="load image_proc/rectify manager --no-bond"
        respawn="true">
    <remap from="image_mono"  to="rgb/image_raw" />
    <remap from="image_rect"  to="rgb/image_rect" />
  </node>

  <!-- Spawn an image_proc/rectify nodelet to rectify the depth image -->
  <node pkg="nodelet" type="nodelet" name="rectify_depth"
        args="load image_proc/rectify manager --no-bond"
        respawn="true">
    <remap from="image_mono"  to="depth/image_raw" />
    <remap from="image_rect"  to="depth/image_rect" />
  </node>

  <!-- Start camera -->
  <node pkg="nodelet" type="nodelet" name="k4a_ros_bridge"
        args="load Azure_Kinect_ROS_Driver/K4AROSBridgeNodelet manager --no-bond"
        respawn="true">
    <param name="depth_enabled"     value="true" />
    <param name="depth_mode"        value="WFOV_2X2BINNED" />
    <param name="color_enabled"     value="true" />
    <param name="color_resolution"  value="720P" />
    <param name="fps"               value="5" />
    <param name="point_cloud"       value="true" />
    <param name="rgb_point_cloud"   value="true" />
    <param name="required"          value="true" />
    <param name="imu_rate_target"   value="100" />
  </node>
  <!-- Console launch prefix -->
  <arg name="launch_prefix" default=""/>
  <arg name="image" default="rgb/image_raw" />

  <!-- Config and weights folder. -->
  <arg name="yolo_weights_path"          default="$(find darknet_ros)/yolo_network_config/weights"/>
  <arg name="yolo_config_path"           default="$(find darknet_ros)/yolo_network_config/cfg"/>

  <!-- ROS and network parameter files -->
  <arg name="ros_param_file"             default="$(find darknet_ros)/config/ros.yaml"/>
  <arg name="network_param_file"         default="$(find darknet_ros)/config/yolov2-tiny.yaml"/>

  <!-- Load parameters -->
  <rosparam command="load" ns="darknet_ros" file="$(arg ros_param_file)"/>
  <rosparam command="load" ns="darknet_ros" file="$(arg network_param_file)"/>

  <!-- Start darknet and ros wrapper -->
  <node pkg="darknet_ros" type="darknet_ros" name="darknet_ros" output="screen" launch-prefix="$(arg launch_prefix)">
    <param name="weights_path"          value="$(arg yolo_weights_path)" />
    <param name="config_path"           value="$(arg yolo_config_path)" />
    <remap from="camera/rgb/image_raw"  to="$(arg image)" />
  </node>

  <node pkg="darknet_ros" type="multiperson_detection_yolo.py" name="person_detection" output="screen"/>
 <!--<node name="republish" type="republish" pkg="image_transport" output="screen" 	args="compressed in:=/front_camera/image_raw raw out:=/camera/image_raw" /> -->
 <node pkg="rviz" type="rviz" name="rviz" args="-d $(find darknet_ros)/test.rviz"/>
</launch>
